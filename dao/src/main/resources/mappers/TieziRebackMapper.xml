<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guangbo.dao.mapper.TieziRebackMapper" >
  <resultMap id="BaseResultMap" type="com.guangbo.dao.entity.TieziReback" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="t_id" property="tId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="rebacktimes" property="rebacktimes" jdbcType="INTEGER" />
    <result column="zan" property="zan" jdbcType="INTEGER" />
    <result column="repay_time" property="repayTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.guangbo.dao.entity.TieziReback" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, t_id, user_id, type, rebacktimes, zan, repay_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.guangbo.dao.entity.TieziRebackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tiezi_reback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guangbo.dao.entity.TieziRebackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tiezi_reback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tiezi_reback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tiezi_reback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guangbo.dao.entity.TieziRebackExample" >
    delete from tiezi_reback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guangbo.dao.entity.TieziReback" >
    insert into tiezi_reback (id, t_id, user_id, 
      type, rebacktimes, zan, 
      repay_time, content)
    values (#{id,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{rebacktimes,jdbcType=INTEGER}, #{zan,jdbcType=INTEGER}, 
      #{repayTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.guangbo.dao.entity.TieziReback" >
    insert into tiezi_reback
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tId != null" >
        t_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="rebacktimes != null" >
        rebacktimes,
      </if>
      <if test="zan != null" >
        zan,
      </if>
      <if test="repayTime != null" >
        repay_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tId != null" >
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="rebacktimes != null" >
        #{rebacktimes,jdbcType=INTEGER},
      </if>
      <if test="zan != null" >
        #{zan,jdbcType=INTEGER},
      </if>
      <if test="repayTime != null" >
        #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guangbo.dao.entity.TieziRebackExample" resultType="java.lang.Integer" >
    select count(*) from tiezi_reback
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tiezi_reback
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tId != null" >
        t_id = #{record.tId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.rebacktimes != null" >
        rebacktimes = #{record.rebacktimes,jdbcType=INTEGER},
      </if>
      <if test="record.zan != null" >
        zan = #{record.zan,jdbcType=INTEGER},
      </if>
      <if test="record.repayTime != null" >
        repay_time = #{record.repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tiezi_reback
    set id = #{record.id,jdbcType=INTEGER},
      t_id = #{record.tId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      rebacktimes = #{record.rebacktimes,jdbcType=INTEGER},
      zan = #{record.zan,jdbcType=INTEGER},
      repay_time = #{record.repayTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tiezi_reback
    set id = #{record.id,jdbcType=INTEGER},
      t_id = #{record.tId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      rebacktimes = #{record.rebacktimes,jdbcType=INTEGER},
      zan = #{record.zan,jdbcType=INTEGER},
      repay_time = #{record.repayTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guangbo.dao.entity.TieziReback" >
    update tiezi_reback
    <set >
      <if test="tId != null" >
        t_id = #{tId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="rebacktimes != null" >
        rebacktimes = #{rebacktimes,jdbcType=INTEGER},
      </if>
      <if test="zan != null" >
        zan = #{zan,jdbcType=INTEGER},
      </if>
      <if test="repayTime != null" >
        repay_time = #{repayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.guangbo.dao.entity.TieziReback" >
    update tiezi_reback
    set t_id = #{tId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      rebacktimes = #{rebacktimes,jdbcType=INTEGER},
      zan = #{zan,jdbcType=INTEGER},
      repay_time = #{repayTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guangbo.dao.entity.TieziReback" >
    update tiezi_reback
    set t_id = #{tId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      rebacktimes = #{rebacktimes,jdbcType=INTEGER},
      zan = #{zan,jdbcType=INTEGER},
      repay_time = #{repayTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--更新帖子回帖数-->
  <update id="updateRebackTimes" parameterType="java.lang.Integer" >
    update tiezi_reback
    set
    rebacktimes = rebacktimes + 1
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>